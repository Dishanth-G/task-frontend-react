{"version":3,"sources":["components/Editor.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","useState","state","setState","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","timeout","setTimeout","clearTimeout","onClick","style","textAlign","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAWe,SAASA,EAAOC,GAE7B,IACEC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SAQF,OAEE,sBAAKC,UAAS,oBAAd,UAEE,qBAAKA,UAAU,eAAf,SACDH,IAIC,cAAC,aAAD,CACEI,eAdN,SAAsBC,EAAQC,EAAML,GAClCC,EAASD,IAcLA,MAAOA,EACPE,UAAU,sBACVI,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMX,EACNY,MAAO,MACPC,aAAa,QCsFRC,MA3Hf,WAGE,MAA0BC,mBAAS,QAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAGA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAGA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAGA,EAAoBN,mBAAS,IAA7B,mBAAOO,EAAP,KAAWC,EAAX,KAGA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KAmCA,OAhCAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMO,aAAaF,MACzB,CAACT,EAAME,EAAKE,IAsBb,qCAEA,sBAAKlB,UAAU,cAAf,UACE,+CACA,uBACE,wBAAQ0B,QAvBd,WACEb,EAAS,SAsBsBb,UAAU,SAArC,0BACA,uBACA,wBAAQ0B,QAnBd,WACEb,EAAS,QAkBqBb,UAAU,SAApC,uBACA,uBACA,wBAAQ0B,QAhBd,WACEb,EAAS,OAeoBb,UAAU,SAAnC,sBACA,uBAEA,uBACA,oBAAI2B,MAAO,CAACC,UAAU,UAAtB,uBAEA,oBAAID,MAAO,CAACC,UAAU,UAAtB,qCAIJ,sBAAK5B,UAAU,UAAf,UAGE,sBAAKA,UAAU,gBAAf,UAGY,SAATY,GACD,cAAClB,EAAD,CACEE,SAAS,MACTC,YAAY,aACZC,MAAOgB,EACPf,SAAUgB,IAIF,QAATH,GAAkB,cAAClB,EAAD,CACjBE,SAAS,MACTC,YAAY,YACZC,MAAOkB,EACPjB,SAAUkB,IAIF,OAATL,GACD,cAAClB,EAAD,CACEE,SAAS,aACTC,YAAY,WACZC,MAAOoB,EACPnB,SAAUoB,OAMd,sBAAKnB,UAAU,OAAf,UAEA,uBACE,wBACEoB,OAAQA,EACRS,MAAM,SAENC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,mBCnHjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1696f736.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\n\r\nimport 'codemirror/theme/mbo.css'\r\n\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\n\r\n\r\nexport default function Editor(props) {\r\n  // Contains  language name,filename,code and onchange function to change the content\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n\r\n// To change the code\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={`editor-container `}>\r\n      {/* To display filename */}\r\n      <div className=\"editor-title\">\r\n    {displayName}\r\n       \r\n       {/* Editor */}\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'mbo',\r\n          lineNumbers: true\r\n        }}\r\n        \r\n      />\r\n      \r\n    </div>\r\n\r\n    \r\n  )\r\n}","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\n\n\n// Done by Dishanth G - 18BCE1090\n\nfunction App() {\n\n  // Takes care of the file that is openened in the editor\n  const [state, setState] = useState('html')\n\n  // Stores the code typed in index.html\n  const [html, setHtml] = useState('')\n\n  // Stores the code typed in index.css\n  const [css, setCss] = useState('')\n\n  // Stores the code typed in index.js\n  const [js, setJs] = useState('')\n\n  // Stores all the code(HTML,CSS,JS) as one document to show output in iframe\n  const [srcDoc, setSrcDoc] = useState('')\n\n  // Whenever any  file (HTML,CSS,JS)changes  the source document is changed accordingly.This helps in hot reloading the iframe\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n    }, 150)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n\n  // To make the editor show index.html\n  function showhtml(){\n    setState('html')\n  }\n\n\n// To make the editor show index.css\n  function showcss(){\n    setState('css')\n  }\n\n// To make the editor show index.js\n  function showjs(){\n    setState('js')\n  }\n   \n   \n  return (\n\n    <>\n    {/* Filexplorer pane. Contains 3 buttons to change the file in editor  */}\n    <div className=\"Filexplorer\"> \n      <h1>File Explorer</h1>\n      <hr></hr>\n        <button onClick={showhtml} className=\"btchng\"  >  index.html</button>\n        <br />\n        <button onClick={showcss} className=\"btchng\">index.css</button>\n        <br />\n        <button onClick={showjs} className=\"btchng\">index.js</button>  \n        <br />\n \n        <hr></hr>\n        <h3 style={{textAlign:\"center\"}}>Done by  </h3>\n        \n        <h3 style={{textAlign:\"center\"}}>Dishanth G 18BCE1090</h3>\n    </div>\n    \n    {/* Contains the code editor and live view pane */}\n    <div className=\"Codedit\">  \n\n    {/* Editor Components.Based on the file that is clicked  from the explorer the appropriate editor is opened*/}\n      <div className=\"pane top-pane\">\n\n        {/* Opens index.html */}\n        {state=== 'html' && \n        <Editor\n          language=\"xml\"\n          displayName=\"index.html\"\n          value={html}\n          onChange={setHtml}\n        />}\n\n        {/* Opens index.css */}\n        {state=== 'css' && <Editor\n          language=\"css\"\n          displayName=\"index.css\"\n          value={css}\n          onChange={setCss}\n        /> }\n\n        {/* Opens index.js */}        \n        {state=== 'js' &&\n        <Editor\n          language=\"javascript\"\n          displayName=\"index.js\"\n          value={js}\n          onChange={setJs}\n        />}\n      </div>\n\n      \n      {/* live view Component. Contains the iframe with the srcdocument code to show the output */}\n      <div className=\"pane\">\n      \n      <br/>\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          // dont allow cookies \n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}